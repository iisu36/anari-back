{"version":3,"sources":["Table.js","App.js","index.js"],"names":["Standings","stats","veikkaajat","standing","name","teams","division","points","pisteporssi","league","divisions","map","team","veikkaaja","joukkue","sort","a","b","toUpperCase","index","style","fontSize","className","rowSpan","key","id","divisionRank","date","lastUpdated","toString","substring","leagueRank","App","props","useState","setStats","useEffect","console","log","axios","get","then","response","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a903d79.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport Popper from 'popper.js'\n\nimport React, { useState } from 'react'\n\nconst Standings = ({ stats }) => {\n\n    let veikkaajat = [\n        {\n            standing: 0,\n            name: \"Kuukkeli\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"St. Louis Blues\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Pittsburgh Penguins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Washington Capitals\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Calgary Flames\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Toronto Maple Leafs\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Dallas Stars\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 86\n        },\n        {\n            standing: 0,\n            name: \"Karvanen\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Vegas Golden Knights\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Boston Bruins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"New York Rangers\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Edmonton Oilers\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Vancouver Canucks\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Carolina Hurricanes\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 0\n        },\n        {\n            standing: 0,\n            name: \"Huida\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"St. Louis Blues\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Boston Bruins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"New York Islanders\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Toronto Maple Leafs\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Vancouver Canucks\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Carolina Hurricanes\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 80\n        },\n        {\n            standing: 0,\n            name: \"Pääjoki\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Vegas Golden Knights\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Boston Bruins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Washington Capitals\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Toronto Maple Leafs\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Vancouver Canucks\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Carolina Hurricanes\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 76\n        },\n    ]\n\n    const pointCounter = () => {\n\n        veikkaajat.map(veikkaaja => {\n\n            let points = 0\n\n            veikkaaja.teams.map(team => {\n                points += team.points\n            })\n\n            veikkaaja.points = points\n        })\n    }\n\n    if (!stats.league || !stats.divisions) {\n        return null\n    }\n\n    stats.league.map(team => {\n        veikkaajat.map(veikkaaja => {\n            veikkaaja.teams.map(joukkue => {\n                if (team.team === joukkue.name) {\n                    joukkue.points = team.points\n                }\n            })\n        })\n    })\n\n    pointCounter()\n\n    veikkaajat = veikkaajat.sort((a, b) => {\n\n        if (a.points < b.points) return 1\n        if (a.points > b.points) return -1\n\n        if (a.points === b.points) {\n            if (a.name.toUpperCase() < b.name.toUpperCase()) return -1\n            else return 1\n        }\n    })\n\n    let index = 1\n\n    veikkaajat.map(veikkaaja => {\n        veikkaaja.standing = index++\n    })\n\n    const style = {\n        fontSize: 9\n    }\n\n    return (\n        <div className=\"d-flex flex-row justify-content-around\">\n\n            <div>\n                <table>\n                    <tbody>\n\n                        {veikkaajat.map(veikkaaja => {\n\n                            return (\n                                <>\n                                    <tr>\n                                        <td rowSpan=\"8\">{veikkaaja.standing}.</td>\n                                        <td rowSpan=\"8\">{veikkaaja.name}</td>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[0].division}</td>\n                                        <td>{veikkaaja.teams[0].name}</td>\n                                        <td>{veikkaaja.teams[0].points}</td>\n                                        <td rowSpan=\"8\">Yhteensä {veikkaaja.points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[1].name}</td>\n                                        <td>{veikkaaja.teams[1].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[2].division}</td>\n                                        <td>{veikkaaja.teams[2].name}</td>\n                                        <td>{veikkaaja.teams[2].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[3].name}</td>\n                                        <td>{veikkaaja.teams[3].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[4].division}</td>\n                                        <td>{veikkaaja.teams[4].name}</td>\n                                        <td>{veikkaaja.teams[4].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[5].name}</td>\n                                        <td>{veikkaaja.teams[5].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[6].division}</td>\n                                        <td>{veikkaaja.teams[6].name}</td>\n                                        <td>{veikkaaja.teams[6].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[7].name}</td>\n                                        <td>{veikkaaja.teams[7].points}</td>\n                                    </tr>\n\n                                    <br></br>\n                                </>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n            <div>\n                {stats.divisions.map(division => {\n                    return (\n                        <div key={division.division}>\n                            <h3>{division.division}</h3>\n                            <table>\n                                <tbody>\n                                    {division.teams.map(team => {\n\n                                        const key = `division${team.id}`\n\n                                        return (\n                                            <tr key={key}>\n                                                <td>{team.divisionRank}.</td>\n                                                <td>{team.team}</td>\n                                                <td>{team.points}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                    )\n                })}\n            </div>\n\n            <div>\n                <h3>NHL</h3>\n                <table>\n                    <tbody>\n                        {stats.league.map(team => {\n\n                            let date = team.lastUpdated.toString().substring(5, 16)\n\n                            const key = `league${team.id}`\n                            return (\n                                <tr key={key}>\n                                    <td>{team.leagueRank}.</td>\n                                    <td>{team.team}</td>\n                                    <td>{team.points}</td>\n                                    <td style={style}>{date}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Standings","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Standings from './Table'\n\nconst baseUrl = '/anari'\n\nconst App = (props) => {\n\n  const [stats, setStats] = useState([])\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get(baseUrl)\n      .then(response => {\n        console.log('promise fulfilled')\n        setStats(response.data)\n      })\n  }, [])\n\n  return (\n    <div>\n\n      <h1>Änäriveikkaus</h1>\n\n      <Standings stats={stats} />\n\n    </div>\n  )\n}\n\nexport default App \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}